/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SettingsFrame.java
 *
 * Created on 8 d√©c. 2011, 21:35:28
 */
package enstabretagne.optimousse.pathplanner.views;

import enstabretagne.optimousse.pathplanner.controllers.PathPlannerController;
import enstabretagne.optimousse.pathplanner.model.PathPlannerModel;
import enstabretagne.optimousse.pathplanner.settings.ISettings;
import java.util.Observable;
import javax.sound.midi.SysexMessage;
import javax.swing.JComboBox;
import javax.swing.JPanel;
import javax.swing.border.TitledBorder;
import enstabretagne.optimousse.pathplanner.views.components.SettingsPanelFactory;
import enstabretagne.optimousse.pathplanner.views.components.SettingsPanelFactory.Algorithm;
import java.awt.Component;
import java.util.Observer;

/**
 *
 * @author jem
 */
public class SettingsFrame extends javax.swing.JFrame implements Observer{

    private PathPlannerController controller;
    
    /** Creates new form SettingsFrame */
    public SettingsFrame(PathPlannerController controller) {
        this.controller=controller;
        initComponents();
        setupAlgorithmsList();

        // default shown algo is the first in the list
        changePanel((Algorithm)algorithmsList.getItemAt(0));
        PathPlannerModel.getInstance().addObserver(this);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        algorithmsList = new javax.swing.JComboBox();
        createButton = new javax.swing.JButton();
        dummyPanel = new javax.swing.JPanel();
        addToCurrentMissionCheckBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Algorithm :");

        algorithmsList.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        algorithmsList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                algorithmsListActionPerformed(evt);
            }
        });

        createButton.setText("Create");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        dummyPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Test"));

        addToCurrentMissionCheckBox.setText("Add to current mission");
        addToCurrentMissionCheckBox.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dummyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(algorithmsList, 0, 139, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addToCurrentMissionCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(createButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(algorithmsList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createButton)
                    .addComponent(addToCurrentMissionCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dummyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void algorithmsListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_algorithmsListActionPerformed
        if(evt.getSource() instanceof JComboBox){ // dummy check
            JComboBox cb=(JComboBox) evt.getSource();
            System.out.println((SettingsPanelFactory.Algorithm)cb.getSelectedItem());
            changePanel((SettingsPanelFactory.Algorithm)cb.getSelectedItem());
        }
    }//GEN-LAST:event_algorithmsListActionPerformed

    private ISettings getAlgorithmPanel(){
        if(this.dummyPanel.getComponentCount()!=0){
            for(Component c:dummyPanel.getComponents()){
                if(c instanceof ISettings) return (ISettings)c;
            }
        }
        return null;
    }
    
    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
        ISettings settings=getAlgorithmPanel();
        if(settings!=null){
            if(settings.areSettingsValid()){
                controller.addModel(settings.getSettings().getAlgorithm());
            }
        }
    }//GEN-LAST:event_createButtonActionPerformed

    private JPanel getDummyPanel(){
        return dummyPanel;
    }
    
    private void setupAlgorithmsList(){
        algorithmsList.setModel(new javax.swing.DefaultComboBoxModel(SettingsPanelFactory.availableAlgorithms()));
    }
    
    private void changePanel(SettingsPanelFactory.Algorithm a){
        dummyPanel.removeAll();
        dummyPanel.add(SettingsPanelFactory.makePanel(a));
        ((TitledBorder)dummyPanel.getBorder()).setTitle(a.toString());
        dummyPanel.validate(); // needed to
        dummyPanel.repaint();   // see the panels
        addToCurrentMissionCheckBox.setEnabled(((Algorithm)algorithmsList.getSelectedItem()).isMultitrack());
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                SettingsFrame f=new SettingsFrame(new PathPlannerController());
                        f.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox addToCurrentMissionCheckBox;
    private javax.swing.JComboBox algorithmsList;
    private javax.swing.JButton createButton;
    private javax.swing.JPanel dummyPanel;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object o1) {
        if(o1 instanceof String){
            System.out.println("update called");
            System.out.println(o.toString());
            System.out.println(o1.toString());
            if(o1.equals("Mission Added")){
                
                dispose();
            }
        }
    }
}
